C251 COMPILER V5.60.0,  isr                                                                05/08/23  16:12:47  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: E:\smart car\C251\BIN\C251.EXE ..\USER\src\isr.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\L
                    -ibraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\sr
                    -c) DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj) 

stmt  level    source

    1          ///******************************************************************************************************
             -***************
    2          // * COPYRIGHT NOTICE
    3          // * Copyright (c) 2020,逐飞科技
    4          // * All rights reserved.
    5          // * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6          // *
    7          // * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8          // * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9          // *
   10          // * @file          isr
   11          // * @company       成都逐飞科技有限公司
   12          // * @author        逐飞科技(QQ790875685)
   13          // * @version       查看doc内version文件 版本说明
   14          // * @Software      MDK FOR C251 V5.60
   15          // * @Target core   STC32G12K128
   16          // * @Taobao        https://seekfree.taobao.com/
   17          // * @date          2020-4-14
   18          // ******************************************************************************************************
             -**************/
   19          #include "headfile.h"
   20          
   21          uint8 uart_interrupt_flag = 0;
   22          uint8 my_rx_buffer;//接收缓存
   23          uint8 rx_buff[50];      //uart_rx数据缓冲区
   24          #define PACK_HEAD 0xA5
   25          #define PACK_TAIL 0xA6
   26          char cnt=0;              //接收数据位
   27          char bbsif[5];
   28          uint8 bool_buff[5];
   29          char byte_buff[10];
   30          short short_buff[5];
   31          uint8  int_buff[5];       //int数据保存区
   32          float float_buff[10];    //float数据保存区
   33          uint8 data_pack_flag=0;
   34          int move_flag=0;
   35          ////////////////////////////////
   36          void data_pack_Init(char b1,char b2,char s3,char i4,char f5)
   37          {       
   38   1          bbsif[0]=b1;          //蓝牙传输数据格式Bool->Byte->Short->Int->Float
   39   1          bbsif[1]=b2;
   40   1          bbsif[2]=s3;
   41   1          bbsif[3]=i4;
   42   1          bbsif[4]=f5;  
   43   1      } 
   44          
   45          
   46          void data_pack_receive()
   47          {
   48   1        /*先判断帧头，如果帧头正确则继续接收数据至接收数组，
   49   1        待数据接收完之后再进行解包，将解包数据存至各类型数据的保存数组*/
   50   1      
   51   1          rx_buff[cnt] = my_rx_buffer;//将数据取出
   52   1          
   53   1          if(cnt==0 && rx_buff[0]!=PACK_HEAD)
   54   1          {
   55   2            return;
C251 COMPILER V5.60.0,  isr                                                                05/08/23  16:12:47  PAGE 2   

   56   2          }
   57   1          else if(rx_buff[cnt]==PACK_HEAD && cnt!=0)
   58   1          {
   59   2            cnt=1;
   60   2            rx_buff[0]=PACK_HEAD;
   61   2            return;
   62   2          }
   63   1          if(rx_buff[cnt]==PACK_TAIL)
   64   1          {
   65   2            /*int sum=0;                                //数据校验
   66   2            for(int i=1;i<cnt-1;i++)
   67   2            {
   68   2              sum+=rx_buff[i];                    
   69   2            }
   70   2            if(sum%0x100!=rx_buff[cnt-1])
   71   2            { 
   72   2              cnt=0;
   73   2              return;           //若数据校验位不合理，返回
   74   2            }*/
   75   2            
   76   2            uint8 buffsum=0;             //数据处理
   77   2            
   78   2            uint8 buff_bool=0;              //int数据保存位
   79   2            uint8 buff_byte=0;              //float数据保存位
   80   2            uint8 buff_short=0;              //float数据保存位        
   81   2            uint8 buff_int=0;              //int数据保存位
   82   2            uint8 buff_float=0;              //float数据保存位
   83   2            int i;
   84   2             
   85   2            buffsum+=1;
   86   2            if(bbsif[0])
   87   2            { 
   88   3              for( i=0;i<bbsif[0];i++)
   89   3              {           
   90   4                bool_buff[buff_bool+i] = rx_buff[buffsum]&(0x01<<i);
   91   4              }
   92   3                buffsum+=1;
   93   3            }           
   94   2            if(bbsif[1])
   95   2            {
   96   3              for( i=0;i<bbsif[1];i++)
   97   3              {     
   98   4                byte_buff[buff_byte+i] = rx_buff[buffsum];          
   99   4                buffsum+=1;
  100   4              }
  101   3              //move_flag=1;
  102   3            }           
  103   2            if(bbsif[2])
  104   2            {
  105   3              for( i=0;i<bbsif[2];i++)
  106   3              {           
  107   4                ((uint8 *)short_buff)[buff_short+i*2] = rx_buff[buffsum];
  108   4                ((uint8 *)short_buff)[buff_short+i*2+1] = rx_buff[buffsum+1];
  109   4                buffsum+=2;
  110   4              }
  111   3            }         
  112   2            if(bbsif[3])
  113   2            {
  114   3              for( i=0;i<bbsif[3];i++)
  115   3              {           
  116   4                ((uint8 *)int_buff)[buff_int+i*4] = rx_buff[buffsum];
  117   4                ((uint8 *)int_buff)[buff_int+i*4+1] = rx_buff[buffsum+1];
  118   4                ((uint8 *)int_buff)[buff_int+i*4+2] = rx_buff[buffsum+2];
  119   4                ((uint8 *)int_buff)[buff_int+i*4+3] = rx_buff[buffsum+3];
  120   4                buffsum+=4;
  121   4              }
C251 COMPILER V5.60.0,  isr                                                                05/08/23  16:12:47  PAGE 3   

  122   3            }
  123   2            if(bbsif[4])
  124   2            {
  125   3              for( i=0;i<bbsif[4];i++)
  126   3              {           
  127   4                ((uint8 *)float_buff)[buff_float+i*4+0] = rx_buff[buffsum];
  128   4                ((uint8 *)float_buff)[buff_float+i*4+1] = rx_buff[buffsum+1];
  129   4                ((uint8 *)float_buff)[buff_float+i*4+2] = rx_buff[buffsum+2];
  130   4                ((uint8 *)float_buff)[buff_float+i*4+3] = rx_buff[buffsum+3];
  131   4                buffsum+=4;
  132   4              }
  133   3            }
  134   2            cnt=0;
  135   2            data_pack_flag=1;   
  136   2            move_flag=1;
  137   2          } 
  138   1          
  139   1          if(cnt>50)
  140   1          {              //限制传输长度，可增大
  141   2            cnt=0;
  142   2          }
  143   1          else
  144   1          {
  145   2            cnt++;
  146   2          }       
  147   1      }
  148          
  149          
  150          //UART1中断
  151          void UART1_Isr() interrupt 4
  152          {
  153   1          uint8 res;
  154   1        static uint8 dwon_count;
  155   1          if(UART1_GET_TX_FLAG)
  156   1          {
  157   2              UART1_CLEAR_TX_FLAG;
  158   2              busy[1] = 0;
  159   2          }
  160   1          if(UART1_GET_RX_FLAG)
  161   1          {
  162   2              UART1_CLEAR_RX_FLAG;
  163   2              res = SBUF;
  164   2              //程序自动下载
  165   2              if(res == 0x7F)
  166   2              {
  167   3                  if(dwon_count++ > 20)
  168   3                      IAP_CONTR = 0x60;
  169   3              }
  170   2              else
  171   2              {
  172   3                  dwon_count = 0;
  173   3              }
  174   2          }
  175   1      }
  176          
  177          //UART2中断
  178          void UART2_Isr() interrupt 8
  179          {
  180   1          if(UART2_GET_TX_FLAG)
  181   1        {
  182   2              UART2_CLEAR_TX_FLAG;
  183   2          busy[2] = 0;
  184   2        }
  185   1          if(UART2_GET_RX_FLAG)
  186   1        {
  187   2              UART2_CLEAR_RX_FLAG;
C251 COMPILER V5.60.0,  isr                                                                05/08/23  16:12:47  PAGE 4   

  188   2          //接收数据寄存器为：S2BUF
  189   2      
  190   2        }
  191   1      }
  192          
  193          
  194          //UART3中断
  195          void UART3_Isr() interrupt 17
  196          {
  197   1          if(UART3_GET_TX_FLAG)
  198   1        {
  199   2              UART3_CLEAR_TX_FLAG;
  200   2          busy[3] = 0;
  201   2        }
  202   1          if(UART3_GET_RX_FLAG)
  203   1        {
  204   2              UART3_CLEAR_RX_FLAG;
  205   2          //接收数据寄存器为：S3BUF
  206   2      
  207   2        }
  208   1      }
  209          
  210          
  211          //UART4中断
  212          uint8 res;
  213          void UART4_Isr() interrupt 18
  214          {
  215   1          if(UART4_GET_TX_FLAG)
  216   1        {
  217   2              UART4_CLEAR_TX_FLAG;
  218   2          busy[4] = 0;
  219   2        }
  220   1           
  221   1          if(UART4_GET_RX_FLAG)
  222   1        {
  223   2              
  224   2      //        data_pack_Init(0,10,0,0,0);
  225   2              uart_interrupt_flag = 1;
  226   2              my_rx_buffer=S4BUF;              //读取数据
  227   2              data_pack_receive();
  228   2          
  229   2              
  230   2              
  231   2          //接收数据寄存器为：S4BUF;
  232   2      //    if(wireless_type == WIRELESS_SI24R1)
  233   2      //        {
  234   2      //            wireless_uart_callback();           //无线转串口回调函数
  235   2      //        }
  236   2      //        else if(wireless_type == WIRELESS_CH9141)
  237   2      //        {
  238   2      //            bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
  239   2      //        }
  240   2      //        else if(wireless_type == WIRELESS_CH573)
  241   2      //        {
  242   2      //            wireless_ch573_callback();          //CH573无线模块回调函数
  243   2      //        }
  244   2              UART4_CLEAR_RX_FLAG;
  245   2        }
  246   1        
  247   1      }
  248          
  249          #define LED P52
  250          void INT0_Isr() interrupt 0
  251          {
  252   1        LED = 0;  //点亮LED
  253   1      }
C251 COMPILER V5.60.0,  isr                                                                05/08/23  16:12:47  PAGE 5   

  254          void INT1_Isr() interrupt 2
  255          {
  256   1      
  257   1      }
  258          void INT2_Isr() interrupt 10
  259          {
  260   1        INT2_CLEAR_FLAG;  //清除中断标志
  261   1      }
  262          void INT3_Isr() interrupt 11
  263          {
  264   1        INT3_CLEAR_FLAG;  //清除中断标志
  265   1      }
  266          
  267          void INT4_Isr() interrupt 16
  268          {
  269   1        INT4_CLEAR_FLAG;  //清除中断标志
  270   1      }
  271          
  272          void TM0_Isr() interrupt 1
  273          {
  274   1      
  275   1      }
  276          void TM1_Isr() interrupt 3
  277          {
  278   1      
  279   1      }
  280          void TM2_Isr() interrupt 12
  281          {
  282   1        TIM2_CLEAR_FLAG;  //清除中断标志
  283   1        
  284   1      }
  285          void TM3_Isr() interrupt 19
  286          {
  287   1        TIM3_CLEAR_FLAG; //清除中断标志
  288   1        
  289   1      }
  290          
  291          
  292          void TM4_Isr() interrupt 20
  293          {
  294   1        TIM4_CLEAR_FLAG; //清除中断标志
  295   1      
  296   1          
  297   1      //  ccd_collect();   //CCD采集数据
  298   1      
  299   1      }
  300          
  301          //void  INT0_Isr()  interrupt 0;
  302          //void  TM0_Isr()   interrupt 1;
  303          //void  INT1_Isr()  interrupt 2;
  304          //void  TM1_Isr()   interrupt 3;
  305          //void  UART1_Isr() interrupt 4;
  306          //void  ADC_Isr()   interrupt 5;
  307          //void  LVD_Isr()   interrupt 6;
  308          //void  PCA_Isr()   interrupt 7;
  309          //void  UART2_Isr() interrupt 8;
  310          //void  SPI_Isr()   interrupt 9;
  311          //void  INT2_Isr()  interrupt 10;
  312          //void  INT3_Isr()  interrupt 11;
  313          //void  TM2_Isr()   interrupt 12;
  314          //void  INT4_Isr()  interrupt 16;
  315          //void  UART3_Isr() interrupt 17;
  316          //void  UART4_Isr() interrupt 18;
  317          //void  TM3_Isr()   interrupt 19;
  318          //void  TM4_Isr()   interrupt 20;
  319          //void  CMP_Isr()   interrupt 21;
C251 COMPILER V5.60.0,  isr                                                                05/08/23  16:12:47  PAGE 6   

  320          //void  I2C_Isr()   interrupt 24;
  321          //void  USB_Isr()   interrupt 25;
  322          //void  PWM1_Isr()  interrupt 26;
  323          //void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       749     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       133          1
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        21     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
